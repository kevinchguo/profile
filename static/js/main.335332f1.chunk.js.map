{"version":3,"sources":["components/Socials/Socials.module.scss","views/Contact/Contact.module.scss","views/Home/Home.module.scss","assets/imgs/linkedin.svg","assets/imgs/twitter.svg","assets/imgs/github.svg","assets/imgs/gitlab.svg","assets/imgs/resume.svg","views/Home/index.js","views/Home/Home.jsx","views/Skills/index.js","views/Skills/Skills.jsx","views/Projects/index.js","views/Projects/Projects.jsx","views/Contact/index.js","views/Contact/Contact.jsx","components/Socials/index.js","components/Socials/Socials.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","style","header2","Skills","skill","Projects","href","target","rel","Contact","content","link","Socials","socials","socialIcons","src","twitterSVG","alt","svgIcon","linkedinSVG","githubSVG","gitlabSVG","resumeSVG","App","activeLinkStyle","color","fontWeight","exact","path","to","component","activeStyle","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.335332f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"socials\":\"Socials_socials___VzqL\",\"socialIcons\":\"Socials_socialIcons__1ZG33\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Contact_content__2n3eG\",\"link\":\"Contact_link__uWfR9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImg\":\"Home_profileImg__2xVrv\",\"header2\":\"Home_header2__TTzzz\"};","module.exports = __webpack_public_path__ + \"static/media/linkedin.19d54ded.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.39fd2e0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.da097bb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/gitlab.41d5c535.svg\";","module.exports = __webpack_public_path__ + \"static/media/resume.3c9dd1e6.svg\";","import Home from './Home';\r\nexport default Home;","import React from 'react';\r\n\r\nimport style from \"./Home.module.scss\";\r\n\r\nconst Home = () => {\r\n  return ( \r\n  <>\r\n    <h1 className=\"description\">Welcome to my webpage!</h1>\r\n    <h2 className={style.header2}>Hi, my name is Kevin Guo</h2>\r\n    <div className=\"description\">\r\n        and I like to code and my hobbies are gaming, tennis, and model building. As recent graduate from DevLeague, a 30 week Full stack JavaScript Web Development course, I realized how much the world relies on technologies on the web. With the knowledge I gained from DevLeague, I believe it has equipped me to learn new technologies, build new things, and/or help contribute to existing technologies in the world.\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n \r\nexport default Home;","import Skills from './Skills';\r\nexport default Skills;","import React from 'react';\r\nimport style from './Skills.module.scss';\r\n\r\nconst Skills = () => {\r\n\r\n  return ( \r\n    <>\r\n      <div className={style.skill}>\r\n        <h1 className=\"header1\">Languages:</h1>\r\n        <p className=\"description\">JavaScript, CSS/SCSS, HTML, SQL, Bash</p>\r\n      </div>\r\n      <div className={style.skill}>       \r\n        <h1 className=\"header1\">Frameworks/Libraries:</h1>\r\n        <p className=\"description\">Angular, React, Redux, Next, Node, Material UI, MongoDB, Mongoose, PostgreSQL, Express, Passport, Redis</p>\r\n      </div>\r\n      <div className={style.skill}>\r\n        <h1 className=\"header1\">Other:</h1>\r\n        <p className=\"description\">Git, Docker, AWS (EC2, S3)</p>\r\n      </div>\r\n    </> \r\n  );\r\n}\r\n \r\nexport default Skills;","import Projects from './Projects';\r\nexport default Projects;","import React from 'react';\r\nimport style from \"./Projects.module.scss\"\r\n\r\nconst Projects = () => {\r\n  return ( \r\n    <>\r\n      <ul>\r\n        <li>\r\n          <a href=\"https://github.com/danieltichiyama/queue_app\" className=\"header1\" target=\"_blank\" rel=\"noopener noreferrer\">QueueApp:</a>\r\n          <p className=\"description\">A JavaScript web application targeted at making reservation tracking and queue management for retailers easier during the Covid-19 pandemic.</p>\r\n        </li>\r\n        <li>\r\n          <a href=\"https://nocan.design/\" className=\"header1\" target=\"_blank\" rel=\"noopener noreferrer\">Blurange:</a>\r\n          <p className=\"description\">A web application that transforms an uploaded resume or LinkedIn data into a personalized and editable website portfolio for developers. Created with a team of 5 people during DevLeague as a final Project.</p>\r\n        </li>\r\n        <li>\r\n          <a href=\"https://github.com/kevinchguo/toodoo\" className=\"header1\" target=\"_blank\" rel=\"noopener noreferrer\">Kanbanban:</a>\r\n          <p className=\"description\">A recreation of the popular web app Trello, where you can create multiple boards and add lists and tasks for each board.</p>\r\n        </li>\r\n        <li>\r\n          <a href=\"https://globalgamejam.org/2020/games/arm-simulator-3\" className=\"header1\" target=\"_blank\" rel=\"noopener noreferrer\">Arm Stimulator:</a>\r\n          <p className=\"description\">A game inspired by the famous ragdoll game QWOP where you control an arm instead of legs.</p>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n \r\nexport default Projects;","import Contact from './Contact';\r\nexport default Contact;","import React from 'react';\r\nimport style from './Contact.module.scss'\r\n\r\nconst Contact = () => {\r\n  return ( \r\n    <>\r\n    <div className={style.content}>\r\n      <div>You can contact me <a href = \"mailto: kevinchguo@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\" className={style.link}>here</a>. I look foward to connecting with you!</div>\r\n    </div>\r\n   </>\r\n   );\r\n}\r\n \r\nexport default Contact;","import Socials from \"./Socials\";\r\nexport default Socials;","import React from 'react';\r\nimport style from './Socials.module.scss'\r\nimport linkedinSVG from \"../../assets/imgs/linkedin.svg\"\r\nimport twitterSVG from \"../../assets/imgs/twitter.svg\"\r\nimport githubSVG from \"../../assets/imgs/github.svg\"\r\nimport gitlabSVG from \"../../assets/imgs/gitlab.svg\"\r\nimport resumeSVG from \"../../assets/imgs/resume.svg\"\r\n\r\n\r\nconst Socials = () => {\r\n  return ( \r\n  <>\r\n    <div className={style.socials}>\r\n      \r\n      <div className={style.socialIcons}>\r\n        <a href=\"https://twitter.com/kevinnnface1\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img src={twitterSVG} alt=\"twitter logo\" className={style.svgIcon}/>\r\n        </a>\r\n        <a href=\"https://www.linkedin.com/in/kevinchguo/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img src={linkedinSVG} alt=\"linkedin logo\" className={style.svgIcon}/>\r\n        </a>\r\n        <a href=\"https://github.com/kevinchguo\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img src={githubSVG} alt=\"github logo\" className={style.svgIcon}/>\r\n        </a>\r\n        <a href=\"https://gitlab.com/kevinchguo\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img src={gitlabSVG} alt=\"gitlab logo\" className={style.svgIcon}/>\r\n        </a>\r\n        <a href=\"https://drive.google.com/file/d/1hd0KIpRNJdAHrmlt2z8vPJDtx-GZCAOT/view?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img src={resumeSVG} alt=\"resume logo\" className={style.svgIcon}/>\r\n        </a>\r\n      </div>\r\n      \r\n    </div>\r\n  </> );\r\n}\r\n \r\nexport default Socials;","import React from \"react\";\r\nimport { Route, Switch, NavLink, Redirect } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Home from \"./views/Home\"\r\nimport Skills from \"./views/Skills\"\r\nimport Projects from \"./views/Projects\"\r\nimport Contact from \"./views/Contact\"\r\nimport Socials from \"./components/Socials\";\r\n\r\nfunction App() {\r\n\r\n  const activeLinkStyle = {\r\n    color: \"#6699ff\",\r\n    fontWeight: \"bold\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <div className=\"viewArea\">\r\n        <div className=\"viewContent\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n             <Redirect to=\"/home\" />\r\n            </Route>\r\n            <Route exact path=\"/home\" component={Home}/>\r\n            <Route exact path=\"/skills\" component={Skills}/>\r\n            <Route exact path=\"/projects\" component={Projects}/>\r\n            <Route exact path=\"/contact\" component={Contact}/>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n\r\n      <footer className=\"footer\">\r\n        <div className=\"footerContent\">\r\n\r\n          <div className=\"footerNav\">\r\n            <NavLink to=\"/home\" className=\"linkStyle\" activeStyle={activeLinkStyle}>Home</NavLink>\r\n            <NavLink to=\"/skills\" className=\"linkStyle\" activeStyle={activeLinkStyle}>Skills</NavLink>\r\n            <NavLink to=\"/projects\"  className=\"linkStyle\"\r\n            activeStyle={activeLinkStyle}>Projects</NavLink>\r\n            <NavLink to=\"/contact\" className=\"linkStyle\" activeStyle={activeLinkStyle}>Contact</NavLink>\r\n          </div>\r\n\r\n          <hr className=\"solid\"></hr>\r\n\r\n          <Socials></Socials>\r\n        </div>\r\n      </footer>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}